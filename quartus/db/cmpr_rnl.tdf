--lpm_compare CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_PIPELINE=1 LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=3 ONE_INPUT_IS_CONSTANT="YES" aclr aeb clock dataa datab CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 17.0 cbx_cycloneii 2017:04:25:18:06:29:SJ cbx_lpm_add_sub 2017:04:25:18:06:29:SJ cbx_lpm_compare 2017:04:25:18:06:29:SJ cbx_mgl 2017:04:25:18:09:28:SJ cbx_nadder 2017:04:25:18:06:30:SJ cbx_stratix 2017:04:25:18:06:30:SJ cbx_stratixii 2017:04:25:18:06:30:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = reg 1 
SUBDESIGN cmpr_rnl
( 
	aclr	:	input;
	aeb	:	output;
	clock	:	input;
	dataa[2..0]	:	input;
	datab[2..0]	:	input;
) 
VARIABLE 
	aeb_output_dffe0a[0..0] : dffe;
	aeb_output_dffe_d_wire0w[0..0]	: WIRE;
	aeb_output_dffe_q_wire0w[0..0]	: WIRE;
	aeb_result_wire[0..0]	: WIRE;
	data_wire[7..0]	: WIRE;
	eq_wire	: WIRE;

BEGIN 
	aeb_output_dffe0a[].clk = clock;
	aeb_output_dffe0a[].clrn = (! aclr);
	aeb_output_dffe0a[].d = ( (! aeb_output_dffe_d_wire0w[0..0]));
	aeb = eq_wire;
	aeb_output_dffe_d_wire0w[] = ( (data_wire[0..0] # data_wire[1..1]));
	aeb_output_dffe_q_wire0w[] = aeb_output_dffe0a[].q;
	aeb_result_wire[0..0] = aeb_output_dffe_q_wire0w[0..0];
	data_wire[] = ( datab[2..2], dataa[2..2], datab[1..1], dataa[1..1], datab[0..0], dataa[0..0], (data_wire[6..6] $ data_wire[7..7]), ((data_wire[2..2] $ data_wire[3..3]) # (data_wire[4..4] $ data_wire[5..5])));
	eq_wire = aeb_result_wire[];
END;
--VALID FILE
